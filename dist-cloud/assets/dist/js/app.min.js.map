{"version":3,"sources":["app.js","button.js","hero.js","menu.js","results.js","select.js"],"names":[],"mappingsjvEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app.min.js","sourcesContent":["/**\r\n * Core JavaScript - Bologna Marathon\r\n * Sistema modulare JavaScript\r\n */\r\n\r\nclass BolognaMarathonApp {\r\n    constructor() {\r\n        this.init();\r\n    }\r\n    \r\n    init() {\r\n        this.setupMenu();\r\n        this.setupModules();\r\n        this.setupScrollEffects();\r\n    }\r\n    \r\n    /**\r\n     * Setup menu mobile\r\n     */\r\n    setupMenu() {\r\n        const menuToggle = document.getElementById('menu-toggle');\r\n        const menuNav = document.getElementById('menu-nav');\r\n        \r\n        if (menuToggle && menuNav) {\r\n            menuToggle.addEventListener('click', () => {\r\n                menuNav.classList.toggle('active');\r\n                menuToggle.classList.toggle('active');\r\n            });\r\n            \r\n            // Chiudi menu al click su link\r\n            const menuLinks = menuNav.querySelectorAll('.menu-link');\r\n            menuLinks.forEach(link => {\r\n                link.addEventListener('click', () => {\r\n                    menuNav.classList.remove('active');\r\n                    menuToggle.classList.remove('active');\r\n                });\r\n            });\r\n            \r\n            // Chiudi menu al click fuori\r\n            document.addEventListener('click', (e) => {\r\n                if (!menuToggle.contains(e.target) && !menuNav.contains(e.target)) {\r\n                    menuNav.classList.remove('active');\r\n                    menuToggle.classList.remove('active');\r\n                }\r\n            });\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Setup moduli dinamici\r\n     */\r\n    setupModules() {\r\n        // Inizializza tutti i moduli presenti\r\n        const modules = document.querySelectorAll('[data-module]');\r\n        modules.forEach(module => {\r\n            const moduleName = module.getAttribute('data-module');\r\n            this.initModule(moduleName, module);\r\n        });\r\n    }\r\n    \r\n    /**\r\n     * Inizializza un modulo specifico\r\n     */\r\n    initModule(moduleName, element) {\r\n        switch (moduleName) {\r\n            case 'actionHero':\r\n                this.initHeroModule(element);\r\n                break;\r\n            case 'resultsTable':\r\n                this.initResultsModule(element);\r\n                break;\r\n            case 'gallery':\r\n                this.initGalleryModule(element);\r\n                break;\r\n            default:\r\n                console.log(`Modulo ${moduleName} non ha JavaScript specifico`);\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Inizializza modulo Hero\r\n     */\r\n    initHeroModule(element) {\r\n        // Parallax effect per background\r\n        const heroBg = element.querySelector('.hero-bg');\r\n        if (heroBg) {\r\n            window.addEventListener('scroll', () => {\r\n                const scrolled = window.pageYOffset;\r\n                const rate = scrolled * -0.5;\r\n                heroBg.style.transform = `translateY(${rate}px)`;\r\n            });\r\n        }\r\n        \r\n        // Smooth scroll per link interni\r\n        const heroLinks = element.querySelectorAll('a[href^=\"#\"]');\r\n        heroLinks.forEach(link => {\r\n            link.addEventListener('click', (e) => {\r\n                e.preventDefault();\r\n                const targetId = link.getAttribute('href').substring(1);\r\n                const targetElement = document.getElementById(targetId);\r\n                if (targetElement) {\r\n                    targetElement.scrollIntoView({\r\n                        behavior: 'smooth',\r\n                        block: 'start'\r\n                    });\r\n                }\r\n            });\r\n        });\r\n    }\r\n    \r\n    /**\r\n     * Inizializza modulo Results\r\n     */\r\n    initResultsModule(element) {\r\n        // Funzionalità già implementate nel modulo PHP\r\n        console.log('Modulo Results inizializzato');\r\n    }\r\n    \r\n    /**\r\n     * Inizializza modulo Gallery\r\n     */\r\n    initGalleryModule(element) {\r\n        // Lightbox per immagini\r\n        const images = element.querySelectorAll('img[data-lightbox]');\r\n        images.forEach(img => {\r\n            img.addEventListener('click', () => {\r\n                this.openLightbox(img.src, img.alt);\r\n            });\r\n        });\r\n    }\r\n    \r\n    /**\r\n     * Apre lightbox\r\n     */\r\n    openLightbox(src, alt) {\r\n        const lightbox = document.createElement('div');\r\n        lightbox.className = 'lightbox';\r\n        lightbox.innerHTML = `\r\n            <div class=\"lightbox-content\">\r\n                <img src=\"${src}\" alt=\"${alt}\">\r\n                <button class=\"lightbox-close\">&times;</button>\r\n            </div>\r\n        `;\r\n        \r\n        document.body.appendChild(lightbox);\r\n        \r\n        // Chiudi lightbox\r\n        const closeBtn = lightbox.querySelector('.lightbox-close');\r\n        closeBtn.addEventListener('click', () => {\r\n            document.body.removeChild(lightbox);\r\n        });\r\n        \r\n        lightbox.addEventListener('click', (e) => {\r\n            if (e.target === lightbox) {\r\n                document.body.removeChild(lightbox);\r\n            }\r\n        });\r\n        \r\n        // ESC per chiudere\r\n        document.addEventListener('keydown', function escHandler(e) {\r\n            if (e.key === 'Escape') {\r\n                document.body.removeChild(lightbox);\r\n                document.removeEventListener('keydown', escHandler);\r\n            }\r\n        });\r\n    }\r\n    \r\n    /**\r\n     * Setup effetti scroll\r\n     */\r\n    setupScrollEffects() {\r\n        // Intersection Observer per animazioni\r\n        const observerOptions = {\r\n            threshold: 0.1,\r\n            rootMargin: '0px 0px -50px 0px'\r\n        };\r\n        \r\n        const observer = new IntersectionObserver((entries) => {\r\n            entries.forEach(entry => {\r\n                if (entry.isIntersecting) {\r\n                    entry.target.classList.add('animate-in');\r\n                }\r\n            });\r\n        }, observerOptions);\r\n        \r\n        // Osserva elementi animabili\r\n        const animateElements = document.querySelectorAll('.hero-module, .results-table, .module-wrapper');\r\n        animateElements.forEach(el => {\r\n            observer.observe(el);\r\n        });\r\n    }\r\n}\r\n\r\n// Utility functions\r\nconst Utils = {\r\n    /**\r\n     * Debounce function\r\n     */\r\n    debounce(func, wait) {\r\n        let timeout;\r\n        return function executedFunction(...args) {\r\n            const later = () => {\r\n                clearTimeout(timeout);\r\n                func(...args);\r\n            };\r\n            clearTimeout(timeout);\r\n            timeout = setTimeout(later, wait);\r\n        };\r\n    },\r\n    \r\n    /**\r\n     * Throttle function\r\n     */\r\n    throttle(func, limit) {\r\n        let inThrottle;\r\n        return function() {\r\n            const args = arguments;\r\n            const context = this;\r\n            if (!inThrottle) {\r\n                func.apply(context, args);\r\n                inThrottle = true;\r\n                setTimeout(() => inThrottle = false, limit);\r\n            }\r\n        };\r\n    },\r\n    \r\n    /**\r\n     * Format time\r\n     */\r\n    formatTime(seconds) {\r\n        const hours = Math.floor(seconds / 3600);\r\n        const minutes = Math.floor((seconds % 3600) / 60);\r\n        const secs = seconds % 60;\r\n        \r\n        if (hours > 0) {\r\n            return `${hours}:${minutes.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\r\n        }\r\n        return `${minutes}:${secs.toString().padStart(2, '0')}`;\r\n    }\r\n};\r\n\r\n// Inizializza app quando DOM è pronto\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    window.bolognaMarathon = new BolognaMarathonApp();\r\n});\r\n\r\n// CSS per lightbox\r\nconst lightboxCSS = `\r\n<style>\r\n.lightbox {\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background: rgba(0, 0, 0, 0.9);\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    z-index: var(--z-modal, 1050);\r\n    animation: fadeIn 0.3s ease;\r\n}\r\n\r\n.lightbox-content {\r\n    position: relative;\r\n    max-width: 90%;\r\n    max-height: 90%;\r\n}\r\n\r\n.lightbox img {\r\n    max-width: 100%;\r\n    max-height: 100%;\r\n    border-radius: var(--border-radius-lg);\r\n}\r\n\r\n.lightbox-close {\r\n    position: absolute;\r\n    top: -40px;\r\n    right: 0;\r\n    background: var(--white);\r\n    border: none;\r\n    border-radius: 50%;\r\n    width: 40px;\r\n    height: 40px;\r\n    font-size: 24px;\r\n    cursor: pointer;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    transition: all var(--transition-fast);\r\n}\r\n\r\n.lightbox-close:hover {\r\n    background: var(--primary-color);\r\n    color: var(--white);\r\n}\r\n\r\n@keyframes fadeIn {\r\n    from { opacity: 0; }\r\n    to { opacity: 1; }\r\n}\r\n\r\n.animate-in {\r\n    animation: slideInUp 0.6s ease forwards;\r\n}\r\n\r\n@keyframes slideInUp {\r\n    from {\r\n        opacity: 0;\r\n        transform: translateY(30px);\r\n    }\r\n    to {\r\n        opacity: 1;\r\n        transform: translateY(0);\r\n    }\r\n}\r\n</style>\r\n`;\r\n\r\n// Aggiungi CSS lightbox al documento\r\ndocument.head.insertAdjacentHTML('beforeend', lightboxCSS);\r\n","/**\r\n * Button Module JavaScript\r\n * Funzionalità interattive per pulsanti\r\n */\r\n\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n    // Gestione pulsanti con loading\r\n    const buttons = document.querySelectorAll('.btn');\r\n    \r\n    buttons.forEach(button => {\r\n        // Click handler per pulsanti con data-loading\r\n        if (button.hasAttribute('data-loading')) {\r\n            button.addEventListener('click', function(e) {\r\n                e.preventDefault();\r\n                \r\n                // Aggiungi stato loading\r\n                this.classList.add('btn-loading');\r\n                this.setAttribute('disabled', 'true');\r\n                \r\n                // Simula operazione asincrona\r\n                const loadingDuration = parseInt(this.getAttribute('data-loading')) || 2000;\r\n                \r\n                setTimeout(() => {\r\n                    this.classList.remove('btn-loading');\r\n                    this.removeAttribute('disabled');\r\n                }, loadingDuration);\r\n            });\r\n        }\r\n        \r\n        // Gestione click per pulsanti con bounce effect\r\n        if (button.hasAttribute('data-bounce')) {\r\n            button.addEventListener('click', function() {\r\n                this.classList.add('btn-bounce');\r\n                \r\n                setTimeout(() => {\r\n                    this.classList.remove('btn-bounce');\r\n                }, 600);\r\n            });\r\n        }\r\n        \r\n        // Gestione hover per pulsanti con pulse\r\n        if (button.hasAttribute('data-pulse')) {\r\n            button.addEventListener('mouseenter', function() {\r\n                this.classList.add('btn-pulse');\r\n            });\r\n            \r\n            button.addEventListener('mouseleave', function() {\r\n                this.classList.remove('btn-pulse');\r\n            });\r\n        }\r\n    });\r\n    \r\n    // Gestione form submission con loading\r\n    const forms = document.querySelectorAll('form');\r\n    forms.forEach(form => {\r\n        const submitButton = form.querySelector('.btn[type=\"submit\"]');\r\n        if (submitButton) {\r\n            form.addEventListener('submit', function() {\r\n                submitButton.classList.add('btn-loading');\r\n                submitButton.setAttribute('disabled', 'true');\r\n            });\r\n        }\r\n    });\r\n    \r\n    // Gestione link esterni con icona\r\n    const externalLinks = document.querySelectorAll('a[href^=\"http\"]:not([href*=\"' + window.location.hostname + '\"])');\r\n    externalLinks.forEach(link => {\r\n        if (!link.querySelector('.fa-external-link-alt')) {\r\n            const icon = document.createElement('i');\r\n            icon.className = 'fas fa-external-link-alt';\r\n            icon.style.marginLeft = '4px';\r\n            link.appendChild(icon);\r\n        }\r\n    });\r\n});\r\n\r\n// Utility functions per gestione pulsanti programmatica\r\nwindow.ButtonUtils = {\r\n    /**\r\n     * Setta stato loading a un pulsante\r\n     */\r\n    setLoading: function(button, loading = true) {\r\n        if (loading) {\r\n            button.classList.add('btn-loading');\r\n            button.setAttribute('disabled', 'true');\r\n        } else {\r\n            button.classList.remove('btn-loading');\r\n            button.removeAttribute('disabled');\r\n        }\r\n    },\r\n    \r\n    /**\r\n     * Cambia variante di un pulsante\r\n     */\r\n    changeVariant: function(button, variant) {\r\n        // Rimuovi tutte le varianti\r\n        const variants = ['primary', 'secondary', 'marathon', 'portici', 'runtune', 'ghost', 'outline'];\r\n        variants.forEach(v => button.classList.remove(`btn-${v}`));\r\n        \r\n        // Aggiungi nuova variante\r\n        button.classList.add(`btn-${variant}`);\r\n    },\r\n    \r\n    /**\r\n     * Cambia dimensione di un pulsante\r\n     */\r\n    changeSize: function(button, size) {\r\n        // Rimuovi tutte le dimensioni\r\n        const sizes = ['small', 'medium', 'large', 'xl'];\r\n        sizes.forEach(s => button.classList.remove(`btn-${s}`));\r\n        \r\n        // Aggiungi nuova dimensione\r\n        button.classList.add(`btn-${size}`);\r\n    },\r\n    \r\n    /**\r\n     * Animazione bounce\r\n     */\r\n    bounce: function(button) {\r\n        button.classList.add('btn-bounce');\r\n        setTimeout(() => {\r\n            button.classList.remove('btn-bounce');\r\n        }, 600);\r\n    }\r\n};\r\n","/**\r\n * Hero Module JavaScript\r\n * Logica per il modulo hero\r\n */\r\n\r\nclass HeroModule {\r\n    constructor() {\r\n        this.init();\r\n    }\r\n    \r\n    init() {\r\n        this.setupParallax();\r\n        this.setupAnimations();\r\n    }\r\n    \r\n    setupParallax() {\r\n        const heroBg = document.querySelector('.hero-bg');\r\n        if (!heroBg) return;\r\n        \r\n        window.addEventListener('scroll', () => {\r\n            const scrolled = window.pageYOffset;\r\n            const rate = scrolled * -0.5;\r\n            heroBg.style.transform = `translateY(${rate}px)`;\r\n        });\r\n    }\r\n    \r\n    setupAnimations() {\r\n        const heroTitle = document.querySelector('.hero-title');\r\n        const heroSubtitle = document.querySelector('.hero-subtitle');\r\n        const heroDescription = document.querySelector('.hero-description');\r\n        \r\n        if (heroTitle) {\r\n            this.animateText(heroTitle, 0);\r\n        }\r\n        \r\n        if (heroSubtitle) {\r\n            this.animateText(heroSubtitle, 200);\r\n        }\r\n        \r\n        if (heroDescription) {\r\n            this.animateText(heroDescription, 400);\r\n        }\r\n    }\r\n    \r\n    animateText(element, delay) {\r\n        setTimeout(() => {\r\n            element.style.opacity = '0';\r\n            element.style.transform = 'translateY(30px)';\r\n            element.style.transition = 'all 0.8s ease';\r\n            \r\n            setTimeout(() => {\r\n                element.style.opacity = '1';\r\n                element.style.transform = 'translateY(0)';\r\n            }, 100);\r\n        }, delay);\r\n    }\r\n}\r\n\r\n// Inizializza quando il DOM è pronto\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    new HeroModule();\r\n});\r\n","/**\r\n * Menu Module JavaScript\r\n * Logica per il modulo menu\r\n */\r\n\r\nclass MenuModule {\r\n    constructor() {\r\n        this.menuToggle = document.getElementById('menu-toggle');\r\n        this.menuNav = document.getElementById('menu-nav');\r\n        this.init();\r\n    }\r\n    \r\n    init() {\r\n        if (this.menuToggle && this.menuNav) {\r\n            this.setupToggle();\r\n            this.setupLinks();\r\n            this.setupOutsideClick();\r\n            this.setupScroll();\r\n        }\r\n    }\r\n    \r\n    setupToggle() {\r\n        this.menuToggle.addEventListener('click', () => {\r\n            this.menuNav.classList.toggle('active');\r\n            this.menuToggle.classList.toggle('active');\r\n        });\r\n    }\r\n    \r\n    setupLinks() {\r\n        const menuLinks = this.menuNav.querySelectorAll('.menu-link');\r\n        menuLinks.forEach(link => {\r\n            link.addEventListener('click', () => {\r\n                this.menuNav.classList.remove('active');\r\n                this.menuToggle.classList.remove('active');\r\n            });\r\n        });\r\n    }\r\n    \r\n    setupOutsideClick() {\r\n        document.addEventListener('click', (e) => {\r\n            if (!this.menuToggle.contains(e.target) && !this.menuNav.contains(e.target)) {\r\n                this.menuNav.classList.remove('active');\r\n                this.menuToggle.classList.remove('active');\r\n            }\r\n        });\r\n    }\r\n    \r\n    setupScroll() {\r\n        let lastScrollY = window.scrollY;\r\n        \r\n        window.addEventListener('scroll', () => {\r\n            const currentScrollY = window.scrollY;\r\n            const menu = document.querySelector('.main-menu');\r\n            \r\n            if (currentScrollY > lastScrollY && currentScrollY > 100) {\r\n                // Scrolling down\r\n                menu.style.transform = 'translateY(-100%)';\r\n            } else {\r\n                // Scrolling up\r\n                menu.style.transform = 'translateY(0)';\r\n            }\r\n            \r\n            lastScrollY = currentScrollY;\r\n        });\r\n    }\r\n}\r\n\r\n// Inizializza quando il DOM è pronto\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    new MenuModule();\r\n});\r\n","/**\r\n * Results Module JavaScript\r\n * Filtri e ordinamento client-side per la tabella risultati\r\n */\r\n\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n  const categoryFilter = document.getElementById('category-filter');\r\n  const table = document.getElementById('results-table');\r\n  const sortableHeaders = document.querySelectorAll('.sortable');\r\n\r\n  if (categoryFilter && table) {\r\n    categoryFilter.addEventListener('change', function() {\r\n      const selectedCategory = this.value;\r\n      const rows = table.querySelectorAll('tbody tr');\r\n\r\n      rows.forEach(row => {\r\n        const category = row.getAttribute('data-category');\r\n        row.style.display = (!selectedCategory || category === selectedCategory) ? '' : 'none';\r\n      });\r\n    });\r\n  }\r\n\r\n  if (sortableHeaders.length && table) {\r\n    sortableHeaders.forEach(header => {\r\n      header.addEventListener('click', function() {\r\n        const column = this.getAttribute('data-sort');\r\n        const tbody = table.querySelector('tbody');\r\n        const rows = Array.from(tbody.querySelectorAll('tr'));\r\n\r\n        const isAsc = !this.classList.contains('asc');\r\n        sortableHeaders.forEach(h => h.classList.remove('asc', 'desc'));\r\n        this.classList.add(isAsc ? 'asc' : 'desc');\r\n\r\n        rows.sort((a, b) => {\r\n          const aVal = a.querySelector(`[data-sort=\"${column}\"]`)?.textContent || '';\r\n          const bVal = b.querySelector(`[data-sort=\"${column}\"]`)?.textContent || '';\r\n\r\n          if (column === 'position' || column === 'time_result') {\r\n            return isAsc ? aVal.localeCompare(bVal, undefined, { numeric: true })\r\n                         : bVal.localeCompare(aVal, undefined, { numeric: true });\r\n          }\r\n          return isAsc ? aVal.localeCompare(bVal) : bVal.localeCompare(aVal);\r\n        });\r\n\r\n        rows.forEach(row => tbody.appendChild(row));\r\n      });\r\n    });\r\n  }\r\n});\r\n","/**\r\n * Select Module JS - inizializzazione Select2\r\n */\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n  const selects = document.querySelectorAll('[data-module=\"select\"] select[data-enhance=\"select2\"]');\r\n  if (!selects.length) return;\r\n\r\n  // Necessita di jQuery e Select2 (caricati come vendor)\r\n  if (typeof window.jQuery === 'undefined' || typeof window.jQuery.fn.select2 === 'undefined') {\r\n    return;\r\n  }\r\n\r\n  selects.forEach(function(sel) {\r\n    const placeholder = sel.getAttribute('data-placeholder') || 'Seleziona...';\r\n    window.jQuery(sel).select2({\r\n      width: 'resolve',\r\n      placeholder: placeholder,\r\n      allowClear: true\r\n    });\r\n  });\r\n});\r\n\r\n\r\n"]}